package com.Bridgelabz.Algorithms;

import java.util.Arrays;

public class Merge{
	
	
	public  static int [] MergeSort(int  arr[],int size) {
	    if (size > 1) {
	      int mid = size / 2;
	      int[] first = Arrays.copyOfRange(arr, 0, mid);
	      first = MergeSort(first, mid); // recursive call for first half array
	      int[] second = Arrays.copyOfRange(arr, mid, size);
	      second = MergeSort(second, size - mid); // recursive call for second half array
	      arr = Merge_arrays(first, second, mid, size - mid);
	    }
	    return ;
	  }

	public static int[] Merge_arrays(int first[], int second[], int n, int m) // respectively
	  {
	    int arr[] = new int[n + m];
	    int i = 0, f = 0, s = 0;
	    while (f < n && s < m) {
	      if (first[f] < second[s])
	        arr[i++] = first[f++];
	      else
	        arr[i++] = second[s++];
	    }
	    while (f < n)
	      arr[i++] = first[f++];
	    while (s < m)
	      arr[i++] = second[s++];
	    return arr;
	  }
	
}
