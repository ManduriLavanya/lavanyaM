package com.Bridgelabz.Generics;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class PrimeArray {

	boolean isPrime(int n) 
	{
		int c = 0;
		for(int i = 1; i<=n; i++)
		{
			if(n%i == 0)
				c++;
		}
		if(c == 2)
			return true;
		else
			return false;
	}

	
	static boolean areAnagram(char[] str1, char[] str2) 
	{ 
	    int n1 = str1.length; 
	    int n2 = str2.length; 

	    
	    if (n1 != n2) 
	        return false; 

	    
	    Arrays.sort(str1); 
	    Arrays.sort(str2); 

	 
	    for (int i = 0; i < n1; i++) 
	        if (str1[i] != str2[i]) 
	            return false; 

	    return true; 
	} 
		public static void main(String args[])throws IOException
		{
			PrimeArray ob = new PrimeArray();

			BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

			System.out.print("Enter the number of rows : ");
			int m=Integer.parseInt(br.readLine());

			System.out.print("Enter the number of columns : ");
			int n=Integer.parseInt(br.readLine());

			int A[][]=new int[m][n];

			int B[] = new int [m*n];

			int i = 0, j = 0;
			int k = 1; 

			while(i < m*n)
			{
				if(ob.isPrime(k)==true)
				{
					B[i] = k;
					i++;
				}
				k++;
			}

			int x = 0;
			for(i=0; i<m; i++)
			{
				for(j=0; j<n; j++)
				{
					A[i][j] = B[x];
					x++;
				}
			}
			
			
			
			

			// printing the result in 2D Array.
			System.out.println("The Final Array is : ");
			for(i=0; i<m; i++)
			{
				for(j=0; j<n; j++)
				{
					System.out.print(A[i][j]+"\t");
				}
				System.out.println();
			}
			
			System.out.println();
			int arr[]=new int[1000];
			
			
			System.out.println("the anagram numbers are");
			for (int k1=0;k1<m;k1++)
				for(int m1=k1+1;m1<n;m1++)
				{
					char[] x1=("" + arr[k1]).toCharArray();
					char[] y=("" + arr[m1]).toCharArray();
				if(	(areAnagram(x1,y))==true) 
				
				{
					System.out.print(" "+arr[k1]+" "+arr[m1]+" ");
					
					for(int i1=0;i1<m;i1++) {
						for(int j1=i+1;j1<n;j1++) {
				
							if(arr[i1]==arr[j1]) {
								Queue q=new Queue();
								q.remove();
							}
						}
				}
			}
		}
		
		}
	 
}
