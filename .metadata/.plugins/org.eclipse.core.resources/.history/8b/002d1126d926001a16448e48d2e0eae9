package com.Bridgelabz.Generics;

import java.util.Scanner;
import java.util.Stack;

public class Balanced {
	public static void main(String[] args) {
		
		Scanner s=new Scanner(System.in);
		System.out.println("Enter the string:");
		String a=s.next();
		Balanced b=new Balanced();
		b.checkBalancedParentesis(a);
		System.out.println(a+" = "+checkBalancedParentesis(a));
		//		 String checkBalancedExpr1=checkBalancedParentesis("a*(b+c)-(d*e)");
//		 System.out.println("a*(b+c)-(d*e) : "+checkBalancedExpr1);
//		 String checkBalancedExpr2=checkBalancedParentesis("(a*(b-c)*{d+e}");
//		 System.out.println("(a*(b-c)*{d+e} : "+checkBalancedExpr2);
		 }
		 public static boolean checkBalancedParentesis(String expr)
		 {
		 if (expr.isEmpty())
		 return true;
		 
		 Stack<Character> stack = new Stack<Character>();
		 for (int i = 0; i < expr.length(); i++)
		 {
		 char current = expr.charAt(i);
		 if (current == '{' || current == '(' || current == '[')
		 {
		 stack.push(current);
		 }
		 if (current == '}' || current == ')' || current == ']')
		 {
		 if (stack.isEmpty())
		 return false;
		 char last = stack.peek();
		 if (current == '}' && last == '{' || current == ')' && last == '(' || current == ']' && last == '[')
		 stack.pop();
		 else 
		 return false;
		 }
		 }
		 return stack.isEmpty()?true:false;
		 }
		 
}
